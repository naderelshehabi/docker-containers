version: "3.9"

services:
  cockroachdb-1:
    image: cockroachdb/cockroach:v20.2.10
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 5s
        order: stop-first
        failure_action: rollback
        monitor: 60s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          cpus: "1.00"
          memory: 2048M
        reservations:
          cpus: "0.25"
          memory: 1024M

      labels:
        - "traefik.enable=true"

        - "traefik.http.routers.cockroachdb-admin.rule=Host(`cockroachdb.127.0.0.1.nip.io`)"
        - "traefik.http.routers.cockroachdb-admin.service=cockroachdb-admin"
        - "traefik.http.routers.cockroachdb-admin.entrypoints=websecure"
        - "traefik.http.routers.cockroachdb-admin.middlewares=cockroachdb-compress"

        - "traefik.http.services.cockroachdb-admin.loadbalancer.server.scheme=https"
        - "traefik.http.services.cockroachdb-admin.loadbalancer.server.port=8080"
        - "traefik.http.services.cockroachdb-admin.loadBalancer.sticky.cookie"

        - "traefik.http.middlewares.cockroachdb-compress.compress=true"

        - "traefik.tcp.routers.cockroachdb.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.cockroachdb.entrypoints=cockroachdb"
        - "traefik.tcp.routers.cockroachdb.service=cockroachdb-service"
        - "traefik.tcp.services.cockroachdb-service.loadbalancer.server.port=26257"

    stop_grace_period: 60s

    volumes:
      - cockroachdb-1:/cockroach/cockroach-data
      - ./init.sh:/init.sh

    networks:
      - backend

    secrets:
      - source: CA_CERT
        target: ca.crt
      - source: CA_KEY
        target: ca.key
      - source: ROOT_CERT
        target: client.root.crt
      - source: ROOT_KEY
        target: client.root.key
        mode: 0600
      - source: ROACH_PASS
        target: roach_pass.txt

    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

    entrypoint: bash

    command: >
      -c "
        ( /init.sh ) & \
        cockroach cert create-node cockroachdb-1 localhost 127.0.0.1 --certs-dir=/run/secrets --ca-key=/run/secrets/ca.key && \
        cockroach start --advertise-addr=cockroachdb-1 --join=cockroachdb-1:26257,cockroachdb-2:26257,cockroachdb-3:26257 --cache=.25 --max-sql-memory=.25 --logtostderr --certs-dir=/run/secrets
      "

  cockroachdb-2:
    image: cockroachdb/cockroach:v20.2.10
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 60s
        order: stop-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          cpus: "1.00"
          memory: 2048M
        reservations:
          cpus: "0.25"
          memory: 1024M

      labels:
        - "traefik.enable=true"

        - "traefik.http.services.cockroachdb-admin.loadbalancer.server.scheme=https"
        - "traefik.http.services.cockroachdb-admin.loadbalancer.server.port=8080"
        - "traefik.http.services.cockroachdb-admin.loadBalancer.sticky.cookie"

        - "traefik.tcp.routers.cockroachdb.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.cockroachdb.entrypoints=cockroachdb"
        - "traefik.tcp.routers.cockroachdb.service=cockroachdb-service"
        - "traefik.tcp.services.cockroachdb-service.loadbalancer.server.port=26257"

    stop_grace_period: 60s

    volumes:
      - cockroachdb-2:/cockroach/cockroach-data

    networks:
      - backend

    secrets:
      - source: CA_CERT
        target: ca.crt
      - source: CA_KEY
        target: ca.key
      - source: ROOT_CERT
        target: client.root.crt
      - source: ROOT_KEY
        target: client.root.key
        mode: 0600

    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

    entrypoint: bash

    command: >
      -c "
        cockroach cert create-node cockroachdb-2 localhost 127.0.0.1 --certs-dir=/run/secrets --ca-key=/run/secrets/ca.key && \
        cockroach start --advertise-addr=cockroachdb-2 --join=cockroachdb-1:26257,cockroachdb-2:26257,cockroachdb-3:26257 --cache=.25 --max-sql-memory=.25 --logtostderr --certs-dir=/run/secrets
      "

  cockroachdb-3:
    image: cockroachdb/cockroach:v20.2.10
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 90s
        order: stop-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          cpus: "1.00"
          memory: 2048M
        reservations:
          cpus: "0.25"
          memory: 1024M

      labels:
        - "traefik.enable=true"

        - "traefik.http.services.cockroachdb-admin.loadbalancer.server.scheme=https"
        - "traefik.http.services.cockroachdb-admin.loadbalancer.server.port=8080"
        - "traefik.http.services.cockroachdb-admin.loadBalancer.sticky.cookie"

        - "traefik.tcp.routers.cockroachdb.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.cockroachdb.entrypoints=cockroachdb"
        - "traefik.tcp.routers.cockroachdb.service=cockroachdb-service"
        - "traefik.tcp.services.cockroachdb-service.loadbalancer.server.port=26257"

    stop_grace_period: 60s

    volumes:
      - cockroachdb-3:/cockroach/cockroach-data

    networks:
      - backend

    secrets:
      - source: CA_CERT
        target: ca.crt
      - source: CA_KEY
        target: ca.key
      - source: ROOT_CERT
        target: client.root.crt
      - source: ROOT_KEY
        target: client.root.key
        mode: 0600

    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

    entrypoint: bash

    command: >
      -c "
        cockroach cert create-node cockroachdb-3 localhost 127.0.0.1 --certs-dir=/run/secrets --ca-key=/run/secrets/ca.key && \
        cockroach start --advertise-addr=cockroachdb-3 --join=cockroachdb-1:26257,cockroachdb-2:26257,cockroachdb-3:26257 --cache=.25 --max-sql-memory=.25 --logtostderr --certs-dir=/run/secrets
      "

volumes:
  cockroachdb-1:
  cockroachdb-2:
  cockroachdb-3:

# Create this as driver=Overlay scope=swarm before deploying
networks:
  backend:
    external: true

secrets:
  CA_CERT:
    file: ./secrets/ca.crt
  CA_KEY:
    file: ./secrets/ca.key

  ROOT_CERT:
    file: ./secrets/client.root.crt
  ROOT_KEY:
    file: ./secrets/client.root.key

  ROACH_PASS:
    file: ./secrets/roach_pass.txt
