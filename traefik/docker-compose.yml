version: "3.9"

services:
  traefik:
    image: traefik:v2.4.8

    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=(PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.middlewares=traefik-compress"
        - "traefik.http.routers.traefik.middlewares=traefik-auth"
        - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"
        - "traefik.http.middlewares.traefik-compress.compress=true"
        - "traefik.http.middlewares.traefik-auth.digestauth.usersfile=/run/secrets/usersfile"

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

    networks:
      - backend

    configs:
      - source: traefik_config
        target: /etc/traefik/traefik.yml
      - source: traefik_dynamic_config
        target: / etc/traefik/dynamic.yml

    secrets:
      - source: USERSFILE
        target: usersfile
      - source: SSL_CERT
        target: cert.crt
      - source: SSL_KEY
        target: cert.key

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:8000/ping || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

# Create this as driver=Overlay scope=swarm before deploying
networks:
  backend:
    external: true

configs:
  traefik_config:
    file: ./traefik.yml
  traefik_dynamic_config:
    file: ./dynamic.yml

secrets:
  USERSFILE:
    file: ./secrets/usersfile.txt
  SSL_CERT:
    file: ./secrets/cert.crt
  SSL_KEY:
    file: ./secrets/cert.key
