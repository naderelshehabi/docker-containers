# This file uses variable substitution
# To deploy to docker swarm use the following command
# docker stack deploy -c <(docker-compose --env-file docker.env config) elastic

version: "3.9"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG}

    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: stop-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 4096M
        reservations:
          memory: 512M

    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
      - elastic-cluster-config:/config
      - ./scripts/elasticsearch-entrypoint.sh:/etc/elasticsearch/elasticsearch-entrypoint.sh:ro
      - ./scripts/elasticsearch-setup.sh:/etc/elasticsearch/elasticsearch-setup.sh:ro
    
    networks:
      - backend

    command: /etc/elasticsearch/elasticsearch-entrypoint.sh

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt -s https://localhost:9200 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

    configs:
      - source: elasticsearch-config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - source: elastic-cluster-instances
        target: /usr/share/elasticsearch/config/instances.yml

    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG}

    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 256M

      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.kibana-http.rule=PathPrefix(`/kibana`)"
        - "traefik.http.routers.kibana-http.service=kibana"
        - "traefik.http.routers.kibana-http.entrypoints=websecure"
        - "traefik.http.routers.kibana-http.middlewares=kibana-compress"

        - "traefik.http.services.kibana.loadbalancer.server.port=5601"

        - "traefik.http.middlewares.kibana-compress.compress=true"
    
    command: /etc/kibana/kibana-entrypoint.sh

    volumes:
     - elastic-cluster-config:/config
     - ./scripts/kibana-entrypoint.sh:/etc/kibana/kibana-entrypoint.sh:ro
     - ./scripts/kibana-setup.sh:/etc/kibana/kibana-setup.sh:ro
     # - kibana:/kibana

    networks:
      - backend

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --cacert /usr/share/kibana/config/certs/ca/ca.crt -s http://localhost:5601/kibana || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 10

    configs:
      - source: kibana-config
        target: /usr/share/kibana/config/kibana.yml
    
    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

  logstash:
    image: docker.elastic.co/logstash/logstash:${TAG}

    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 512M
    
    command: /etc/logstash/logstash-entrypoint.sh

    volumes:
      - elastic-cluster-config:/config
      - ./scripts/logstash-entrypoint.sh:/etc/logstash/logstash-entrypoint.sh:ro
      - ./scripts/logstash-setup.sh:/etc/logstash/logstash-setup.sh:ro
      # - logstash:/logstash

    networks:
      - backend

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9600 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 10

    configs:
      - source: logstash-config
        target: /usr/share/logstash/config/logstash.yml
      - source: logstash-pipeline
        target: /usr/share/logstash/pipeline/logstash.conf
    
    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

  auditbeat:
    image: docker.elastic.co/beats/auditbeat:${TAG}

    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 256M
        reservations:
          memory: 32M
      
    command: /usr/local/bin/beat-entrypoint.sh auditbeat

    volumes:
      - elastic-cluster-config:/config:ro
      - ./scripts/beat-setup.sh:/usr/local/bin/beat-setup.sh:ro
      - ./scripts/beat-entrypoint.sh:/usr/local/bin/beat-entrypoint.sh:ro

    networks:
      - backend
  
    healthcheck:
      test: auditbeat --strict.perms=false test config
      interval: 30s
      timeout: 10s
      retries: 10

    configs:
      - source: auditbeat-config
        target: /usr/share/auditbeat/auditbeat.yml
    
    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

  filebeat:
    image: docker.elastic.co/beats/filebeat:${TAG}
    user: root
    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 256M
        reservations:
          memory: 32M
      
    command: /usr/local/bin/beat-entrypoint.sh filebeat

    volumes:
      - elastic-cluster-config:/config:ro
      - ./scripts/beat-setup.sh:/usr/local/bin/beat-setup.sh:ro
      - ./scripts/beat-entrypoint.sh:/usr/local/bin/beat-entrypoint.sh:ro
      - /mnt/docker/version-pack-data/community/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

    networks:
      - backend

    healthcheck:
      test: filebeat --strict.perms=false test config
      interval: 30s
      timeout: 10s
      retries: 10

    configs:
      - source: filebeat-config
        target: /usr/share/filebeat/filebeat.yml
    
    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

  heartbeat:
    image: docker.elastic.co/beats/heartbeat:${TAG}
    user: root
    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 256M
        reservations:
          memory: 32M
      
    command: /usr/local/bin/beat-entrypoint.sh heartbeat

    volumes:
      - elastic-cluster-config:/config:ro
      - ./scripts/beat-setup.sh:/usr/local/bin/beat-setup.sh:ro
      - ./scripts/beat-entrypoint.sh:/usr/local/bin/beat-entrypoint.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

    networks:
      - backend

    healthcheck:
      test: heartbeat --strict.perms=false test config
      interval: 30s
      timeout: 10s
      retries: 10

    configs:
      - source: heartbeat-config
        target: /usr/share/heartbeat/heartbeat.yml
    
    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:${TAG}
    user: root
    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 256M
        reservations:
          memory: 32M
      
    command: /usr/local/bin/beat-entrypoint.sh metricbeat

    volumes:
      - elastic-cluster-config:/config:ro
      - ./scripts/beat-setup.sh:/usr/local/bin/beat-setup.sh:ro
      - ./scripts/beat-entrypoint.sh:/usr/local/bin/beat-entrypoint.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

    networks:
      - backend

    healthcheck:
      test: metricbeat --strict.perms=false test config
      interval: 30s
      timeout: 10s
      retries: 10

    configs:
      - source: metricbeat-config
        target: /usr/share/metricbeat/metricbeat.yml
    
    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

  packetbeat:
    image: docker.elastic.co/beats/packetbeat:${TAG}
    user: root
    cap_add:
      - NET_ADMIN
      - NET_RAW

    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 256M
        reservations:
          memory: 32M
      
    command: /usr/local/bin/beat-entrypoint.sh packetbeat

    volumes:
      - elastic-cluster-config:/config:ro
      - ./scripts/beat-setup.sh:/usr/local/bin/beat-setup.sh:ro
      - ./scripts/beat-entrypoint.sh:/usr/local/bin/beat-entrypoint.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

    networks:
      - backend

    healthcheck:
      test: packetbeat --strict.perms=false test config
      interval: 30s
      timeout: 10s
      retries: 10

    configs:
      - source: packetbeat-config
        target: /usr/share/packetbeat/packetbeat.yml
    
    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

  apm-server:
    image: docker.elastic.co/apm/apm-server:${TAG}
    user: root
    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 256M
        reservations:
          memory: 32M
      
    command: /usr/local/bin/beat-entrypoint.sh apm-server

    volumes:
      - elastic-cluster-config:/config:ro
      - ./scripts/beat-setup.sh:/usr/local/bin/beat-setup.sh:ro
      - ./scripts/beat-entrypoint.sh:/usr/local/bin/beat-entrypoint.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

    networks:
      - backend

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --cacert /config/ca/ca.crt -s http://localhost:8200/healthcheck || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 10

    configs:
      - source: apm-server-config
        target: /usr/share/apm-server/apm-server.yml
    
    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

  enterprise-search:
    image: docker.elastic.co/enterprise-search/enterprise-search:${TAG}

    deploy:
      mode: replicated
      replicas: 1

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 0
        order: stop-first

      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.enterprise-search-http.rule=Host(`search.127.0.0.1.nip.io`)"
        - "traefik.http.routers.enterprise-search-http.service=enterprise-search"
        - "traefik.http.routers.enterprise-search-http.entrypoints=websecure"
        - "traefik.http.routers.enterprise-search-http.middlewares=enterprise-search-compress"

        - "traefik.http.services.enterprise-search.loadbalancer.server.port=3002"

        - "traefik.http.middlewares.enterprise-search-compress.compress=true"
      
    entrypoint: ["/bin/tini", "--", "/usr/local/bin/enterprise-search-entrypoint.sh"]

    volumes:
      - elastic-cluster-config:/config:ro
      - ./scripts/enterprise-search-setup.sh:/usr/local/bin/enterprise-search-setup.sh:ro
      - ./scripts/enterprise-search-entrypoint.sh:/usr/local/bin/enterprise-search-entrypoint.sh:ro

    networks:
      - backend

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl http://localhost:3002/api/ent/v1/internal/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 10

    configs:
      - source: enterprise-search-config
        target: /usr/share/enterprise-search/config/enterprise-search.yml
    
    secrets:
      - source: elastic-password
        target: elastic_password
        mode: 0444

###################################################################################################

networks:
  backend:
    external: true

volumes:
  elasticsearch: {}
  elastic-cluster-config: {}
  # kibana: {}
  # logstash: {}

configs:
  elasticsearch-config:
    name: ${elasticsearch_config}
    file: ${elasticsearch_config_file}
  elastic-cluster-instances:
    name: ${elastic_cluster_instances}
    file: ${elastic_cluster_instances_file}
  kibana-config:
      name: ${kibana_config}
      file: ${kibana_config_file}
  logstash-config:
    name: ${logstash_config}
    file: ${logstash_config_file}
  logstash-pipeline:
    name: ${logstash_pipeline}
    file: ${logstash_pipeline_file}
  auditbeat-config:
    name: ${auditbeat_config}
    file: ${auditbeat_config_file}
  filebeat-config:
    name: ${filebeat_config}
    file: ${filebeat_config_file}
  heartbeat-config:
    name: ${heartbeat_config}
    file: ${heartbeat_config_file}
  metricbeat-config:
    name: ${metricbeat_config}
    file: ${metricbeat_config_file}
  packetbeat-config:
    name: ${packetbeat_config}
    file: ${packetbeat_config_file}
  apm-server-config:
    name: ${apm_server_config}
    file: ${apm_server_config_file}
  enterprise-search-config:
    name: ${enterprise_search_config}
    file: ${enterprise_search_config_file}

secrets:
  elastic-password:
    name: ${elastic_password}
    file: ${elastic_password_file}